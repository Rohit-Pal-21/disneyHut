{"ast":null,"code":"var _jsxFileName = \"/home/acer/My  Movies WAD Project/disneyHut/client/src/pages/shows/ShowGenre.js\",\n    _s = $RefreshSig$();\n\nimport BackNavigation from \"../../components/general/BackNavigation\";\nimport ShowGenreCategory from \"../../components/general/Category\";\nimport Footer from \"../../components/general/Footer\";\nimport { useGetShowGenrePageQuery } from \"../../redux/tmdbApi\";\nimport { resetPage } from \"../../redux/layoutSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useUniqueData from \"../../hooks/useUniqueData\";\nimport ListingScreen from \"../../loaders/screens/ListingScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowGenre = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const genreHeading = useSelector(state => state.genre.genres.filter(genre => genre.id === parseInt(id))[0]);\n  const page = useSelector(state => state.layout.page);\n  const {\n    data,\n    isFetching,\n    isLoading\n  } = useGetShowGenrePageQuery({\n    page: page,\n    genre: id\n  });\n  const [final, setFinal] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    uniqueItems\n  } = useUniqueData(final);\n  useEffect(() => {\n    if (data && !isFetching) {\n      setFinal(final => final.concat(...data.results));\n    }\n  }, [data, isFetching]); // Reset to page 1 when unmounts\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetPage());\n      setFinal([]);\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: !isLoading && data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BackNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ShowGenreCategory, {\n        data: uniqueItems,\n        isFetching: isFetching,\n        heading: `Show Genre: ${genreHeading.name}`,\n        totalPages: data === null || data === void 0 ? void 0 : data.total_pages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(ListingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowGenre, \"z7oSR6MrENoemH81UKA0u5ATP+E=\", false, function () {\n  return [useParams, useSelector, useSelector, useGetShowGenrePageQuery, useDispatch, useUniqueData];\n});\n\n_c = ShowGenre;\nexport default ShowGenre;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowGenre\");","map":{"version":3,"names":["BackNavigation","ShowGenreCategory","Footer","useGetShowGenrePageQuery","resetPage","useSelector","useDispatch","useState","useEffect","useParams","useUniqueData","ListingScreen","ShowGenre","id","genreHeading","state","genre","genres","filter","parseInt","page","layout","data","isFetching","isLoading","final","setFinal","dispatch","uniqueItems","concat","results","name","total_pages"],"sources":["/home/acer/My  Movies WAD Project/disneyHut/client/src/pages/shows/ShowGenre.js"],"sourcesContent":["import BackNavigation from \"../../components/general/BackNavigation\";\nimport ShowGenreCategory from \"../../components/general/Category\";\nimport Footer from \"../../components/general/Footer\";\nimport { useGetShowGenrePageQuery } from \"../../redux/tmdbApi\";\nimport { resetPage } from \"../../redux/layoutSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useUniqueData from \"../../hooks/useUniqueData\";\nimport ListingScreen from \"../../loaders/screens/ListingScreen\";\n\nconst ShowGenre = () => {\n  const { id } = useParams();\n  const genreHeading = useSelector(\n    (state) =>\n      state.genre.genres.filter((genre) => genre.id === parseInt(id))[0]\n  );\n  const page = useSelector((state) => state.layout.page);\n  const { data, isFetching, isLoading } = useGetShowGenrePageQuery({\n    page: page,\n    genre: id,\n  });\n  const [final, setFinal] = useState([]);\n  const dispatch = useDispatch();\n  const { uniqueItems } = useUniqueData(final);\n\n  useEffect(() => {\n    if (data && !isFetching) {\n      setFinal((final) => final.concat(...data.results));\n    }\n  }, [data, isFetching]);\n\n  // Reset to page 1 when unmounts\n  useEffect(() => {\n    return () => {\n      dispatch(resetPage());\n      setFinal([]);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"w-full\">\n      {!isLoading && data ?\n      <>\n      <BackNavigation />\n      <ShowGenreCategory\n        data={uniqueItems}\n        isFetching={isFetching}\n        heading={`Show Genre: ${genreHeading.name}`}\n        totalPages={data?.total_pages}\n      />\n      <Footer />\n      </>\n      :\n      <ListingScreen />\n    }\n    </div>\n  );\n}\nexport default ShowGenre"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,yCAA3B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,wBAAT,QAAyC,qBAAzC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM;IAAEC;EAAF,IAASJ,SAAS,EAAxB;EACA,MAAMK,YAAY,GAAGT,WAAW,CAC7BU,KAAD,IACEA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,CAA2BF,KAAD,IAAWA,KAAK,CAACH,EAAN,KAAaM,QAAQ,CAACN,EAAD,CAA1D,EAAgE,CAAhE,CAF4B,CAAhC;EAIA,MAAMO,IAAI,GAAGf,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACM,MAAN,CAAaD,IAAzB,CAAxB;EACA,MAAM;IAAEE,IAAF;IAAQC,UAAR;IAAoBC;EAApB,IAAkCrB,wBAAwB,CAAC;IAC/DiB,IAAI,EAAEA,IADyD;IAE/DJ,KAAK,EAAEH;EAFwD,CAAD,CAAhE;EAIA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMoB,QAAQ,GAAGrB,WAAW,EAA5B;EACA,MAAM;IAAEsB;EAAF,IAAkBlB,aAAa,CAACe,KAAD,CAArC;EAEAjB,SAAS,CAAC,MAAM;IACd,IAAIc,IAAI,IAAI,CAACC,UAAb,EAAyB;MACvBG,QAAQ,CAAED,KAAD,IAAWA,KAAK,CAACI,MAAN,CAAa,GAAGP,IAAI,CAACQ,OAArB,CAAZ,CAAR;IACD;EACF,CAJQ,EAIN,CAACR,IAAD,EAAOC,UAAP,CAJM,CAAT,CAfsB,CAqBtB;;EACAf,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXmB,QAAQ,CAACvB,SAAS,EAAV,CAAR;MACAsB,QAAQ,CAAC,EAAD,CAAR;IACD,CAHD;EAID,CALQ,EAKN,CAACC,QAAD,CALM,CAAT;EAOA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,UACG,CAACH,SAAD,IAAcF,IAAd,gBACD;MAAA,wBACA,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,iBAAD;QACE,IAAI,EAAEM,WADR;QAEE,UAAU,EAAEL,UAFd;QAGE,OAAO,EAAG,eAAcT,YAAY,CAACiB,IAAK,EAH5C;QAIE,UAAU,EAAET,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU;MAJpB;QAAA;QAAA;QAAA;MAAA,QAFA,eAQA,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QARA;IAAA,gBADC,gBAYD,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA;EAbF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA/CD;;GAAMpB,S;UACWH,S,EACMJ,W,EAIRA,W,EAC2BF,wB,EAKvBG,W,EACOI,a;;;KAbpBE,S;AAgDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}