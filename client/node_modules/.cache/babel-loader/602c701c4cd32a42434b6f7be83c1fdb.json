{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const userApi = createApi({\n  reducerPath: \"userApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://mymovies.onrender.com/\"\n  }),\n  tagTypes: [\"collection\"],\n  endpoints: builder => ({\n    // register user\n    register: builder.mutation({\n      query(user) {\n        return {\n          url: \"authorization/register\",\n          method: \"POST\",\n          body: user\n        };\n      }\n\n    }),\n    // login user\n    login: builder.mutation({\n      query(user) {\n        return {\n          url: \"authorization/login\",\n          method: \"POST\",\n          body: user\n        };\n      }\n\n    }),\n    // Get collection\n    getCollection: builder.query({\n      query: token => {\n        return {\n          url: \"user/collection\",\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        };\n      },\n      providesTags: [\"collection\"]\n    }),\n    // Add collection\n    addLike: builder.mutation({\n      query(args) {\n        const {\n          data,\n          token\n        } = args;\n        return {\n          url: \"user/collection\",\n          method: \"POST\",\n          body: data,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        };\n      },\n\n      invalidatesTags: [\"collection\"]\n    }),\n    addWatchLater: builder.mutation({\n      query(args) {\n        const {\n          data,\n          token\n        } = args;\n        return {\n          url: \"user/collection\",\n          method: \"POST\",\n          body: data,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        };\n      },\n\n      invalidatesTags: [\"collection\"]\n    }),\n    // Delete collection\n    removeLike: builder.mutation({\n      query(args) {\n        const {\n          id,\n          token\n        } = args;\n        return {\n          url: `user/collection/${id}`,\n          method: \"DELETE\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        };\n      },\n\n      invalidatesTags: [\"collection\"]\n    }),\n    // Delete collection\n    removeWatchLater: builder.mutation({\n      query(args) {\n        const {\n          id,\n          token\n        } = args;\n        return {\n          url: `user/collection/${id}`,\n          method: \"DELETE\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        };\n      },\n\n      invalidatesTags: [\"collection\"]\n    })\n  })\n});\nexport const {\n  useRegisterMutation,\n  useLoginMutation,\n  useGetCollectionQuery,\n  useAddLikeMutation,\n  useAddWatchLaterMutation,\n  useRemoveLikeMutation,\n  useRemoveWatchLaterMutation\n} = userApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","userApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","register","mutation","query","user","url","method","body","login","getCollection","token","headers","Authorization","providesTags","addLike","args","data","invalidatesTags","addWatchLater","removeLike","id","removeWatchLater","useRegisterMutation","useLoginMutation","useGetCollectionQuery","useAddLikeMutation","useAddWatchLaterMutation","useRemoveLikeMutation","useRemoveWatchLaterMutation"],"sources":["/home/acer/Desktop/project1/myMovies/client/src/redux/userApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const userApi = createApi({\n  reducerPath: \"userApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://mymovies.onrender.com/\",\n  }),\n  tagTypes: [\"collection\"],\n  endpoints: (builder) => ({\n    // register user\n    register: builder.mutation({\n      query(user) {\n        return {\n          url: \"authorization/register\",\n          method: \"POST\",\n          body: user,\n        };\n      },\n    }),\n    // login user\n    login: builder.mutation({\n      query(user) {\n        return {\n          url: \"authorization/login\",\n          method: \"POST\",\n          body: user,\n        };\n      },\n    }),\n    // Get collection\n    getCollection: builder.query({\n      query: (token) => {\n        return {\n          url: \"user/collection\",\n          method: \"GET\",\n          headers: { Authorization: \"Bearer \" + token },\n        };\n      },\n      providesTags: [\"collection\"],\n    }),\n    // Add collection\n    addLike: builder.mutation({\n      query(args) {\n        const { data, token } = args;\n        return {\n          url: \"user/collection\",\n          method: \"POST\",\n          body: data,\n          headers: { Authorization: \"Bearer \" + token },\n        };\n      },\n      invalidatesTags: [\"collection\"],\n    }),\n    addWatchLater: builder.mutation({\n      query(args) {\n        const { data, token } = args;\n        return {\n          url: \"user/collection\",\n          method: \"POST\",\n          body: data,\n          headers: { Authorization: \"Bearer \" + token },\n        };\n      },\n      invalidatesTags: [\"collection\"],\n    }),\n    // Delete collection\n    removeLike: builder.mutation({\n      query(args) {\n        const { id, token } = args;\n        return {\n          url: `user/collection/${id}`,\n          method: \"DELETE\",\n          headers: { Authorization: \"Bearer \" + token },\n        };\n      },\n      invalidatesTags: [\"collection\"],\n    }),\n    // Delete collection\n    removeWatchLater: builder.mutation({\n      query(args) {\n        const { id, token } = args;\n        return {\n          url: `user/collection/${id}`,\n          method: \"DELETE\",\n          headers: { Authorization: \"Bearer \" + token },\n        };\n      },\n      invalidatesTags: [\"collection\"],\n    }),\n  }),\n});\n\nexport const {\n  useRegisterMutation,\n  useLoginMutation,\n  useGetCollectionQuery,\n  useAddLikeMutation,\n  useAddWatchLaterMutation,\n  useRemoveLikeMutation,\n  useRemoveWatchLaterMutation\n} = userApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}