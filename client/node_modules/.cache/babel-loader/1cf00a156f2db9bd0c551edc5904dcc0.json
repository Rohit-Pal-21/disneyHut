{"ast":null,"code":"var _jsxFileName = \"/home/acer/Desktop/project1/myMovies/client/src/pages/movies/MovieGenre.js\",\n    _s = $RefreshSig$();\n\nimport BackNavigation from \"../../components/general/BackNavigation\";\nimport MovieGenreCategory from \"../../components/general/Category\";\nimport Footer from \"../../components/general/Footer\";\nimport { useGetMovieGenrePageQuery } from \"../../redux/tmdbApi\";\nimport { resetPage } from \"../../redux/layoutSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useUniqueData from \"../../hooks/useUniqueData\";\nimport ListingScreen from \"../../loaders/screens/ListingScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieGenre = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const genreHeading = useSelector(state => state.genre.genres.filter(genre => genre.id === parseInt(id))[0]);\n  const page = useSelector(state => state.layout.page);\n  const {\n    data,\n    isFetching,\n    isLoading\n  } = useGetMovieGenrePageQuery({\n    page: page,\n    genre: id\n  });\n  const [final, setFinal] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    uniqueItems\n  } = useUniqueData(final);\n  useEffect(() => {\n    if (data && !isFetching) {\n      setFinal(final => final.concat(...data.results));\n    }\n  }, [data, isFetching]); // Reset to page 1 when unmounts\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetPage());\n      setFinal([]);\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: !isLoading && data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BackNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieGenreCategory, {\n        data: uniqueItems,\n        isFetching: isFetching,\n        heading: `Movie Genre: ${genreHeading.name}`,\n        totalPages: data === null || data === void 0 ? void 0 : data.total_pages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(ListingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieGenre, \"dFvFLFCY6XOiqtsgptDK9tTw31M=\", false, function () {\n  return [useParams, useSelector, useSelector, useGetMovieGenrePageQuery, useDispatch, useUniqueData];\n});\n\n_c = MovieGenre;\nexport default MovieGenre;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieGenre\");","map":{"version":3,"names":["BackNavigation","MovieGenreCategory","Footer","useGetMovieGenrePageQuery","resetPage","useSelector","useDispatch","useState","useEffect","useParams","useUniqueData","ListingScreen","MovieGenre","id","genreHeading","state","genre","genres","filter","parseInt","page","layout","data","isFetching","isLoading","final","setFinal","dispatch","uniqueItems","concat","results","name","total_pages"],"sources":["/home/acer/Desktop/project1/myMovies/client/src/pages/movies/MovieGenre.js"],"sourcesContent":["import BackNavigation from \"../../components/general/BackNavigation\";\nimport MovieGenreCategory from \"../../components/general/Category\";\nimport Footer from \"../../components/general/Footer\";\nimport { useGetMovieGenrePageQuery } from \"../../redux/tmdbApi\";\nimport { resetPage } from \"../../redux/layoutSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useUniqueData from \"../../hooks/useUniqueData\";\nimport ListingScreen from \"../../loaders/screens/ListingScreen\";\n\nconst MovieGenre = () => {\n  const { id } = useParams();\n  const genreHeading = useSelector(state => state.genre.genres.filter(genre => genre.id === parseInt(id))[0]);\n  const page = useSelector(state => state.layout.page);\n  const { data, isFetching, isLoading } = useGetMovieGenrePageQuery({page: page, genre: id});\n  const [final, setFinal] = useState([]);\n  const dispatch = useDispatch();\n  const { uniqueItems } = useUniqueData(final);\n\n  useEffect(() => {\n    if(data && !isFetching) {\n      setFinal(final => final.concat(...data.results));\n    }\n  }, [data, isFetching])\n\n  // Reset to page 1 when unmounts\n  useEffect(() => {\n    return () => {\n      dispatch(resetPage())\n      setFinal([])\n    }\n  },[dispatch])\n\n  return (\n    <div className=\"w-full\">\n      {!isLoading && data ?\n      <>\n        <BackNavigation />\n        <MovieGenreCategory\n          data={uniqueItems}\n          isFetching={isFetching}\n          heading={`Movie Genre: ${genreHeading.name}`}\n          totalPages={data?.total_pages}\n          />\n        <Footer />\n        </>\n        :\n        <ListingScreen />\n      }\n    </div>\n  )\n}\nexport default MovieGenre"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,yCAA3B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,yBAAT,QAA0C,qBAA1C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM;IAAEC;EAAF,IAASJ,SAAS,EAAxB;EACA,MAAMK,YAAY,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,CAA0BF,KAAK,IAAIA,KAAK,CAACH,EAAN,KAAaM,QAAQ,CAACN,EAAD,CAAxD,EAA8D,CAA9D,CAAV,CAAhC;EACA,MAAMO,IAAI,GAAGf,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACM,MAAN,CAAaD,IAAvB,CAAxB;EACA,MAAM;IAAEE,IAAF;IAAQC,UAAR;IAAoBC;EAApB,IAAkCrB,yBAAyB,CAAC;IAACiB,IAAI,EAAEA,IAAP;IAAaJ,KAAK,EAAEH;EAApB,CAAD,CAAjE;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMoB,QAAQ,GAAGrB,WAAW,EAA5B;EACA,MAAM;IAAEsB;EAAF,IAAkBlB,aAAa,CAACe,KAAD,CAArC;EAEAjB,SAAS,CAAC,MAAM;IACd,IAAGc,IAAI,IAAI,CAACC,UAAZ,EAAwB;MACtBG,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAACI,MAAN,CAAa,GAAGP,IAAI,CAACQ,OAArB,CAAV,CAAR;IACD;EACF,CAJQ,EAIN,CAACR,IAAD,EAAOC,UAAP,CAJM,CAAT,CATuB,CAevB;;EACAf,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXmB,QAAQ,CAACvB,SAAS,EAAV,CAAR;MACAsB,QAAQ,CAAC,EAAD,CAAR;IACD,CAHD;EAID,CALQ,EAKP,CAACC,QAAD,CALO,CAAT;EAOA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,UACG,CAACH,SAAD,IAAcF,IAAd,gBACD;MAAA,wBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,kBAAD;QACE,IAAI,EAAEM,WADR;QAEE,UAAU,EAAEL,UAFd;QAGE,OAAO,EAAG,gBAAeT,YAAY,CAACiB,IAAK,EAH7C;QAIE,UAAU,EAAET,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU;MAJpB;QAAA;QAAA;QAAA;MAAA,QAFF,eAQE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QARF;IAAA,gBADC,gBAYC,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA;EAbJ;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAzCD;;GAAMpB,U;UACWH,S,EACMJ,W,EACRA,W,EAC2BF,yB,EAEvBG,W,EACOI,a;;;KAPpBE,U;AA0CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}